# Generated by Django 5.2.5 on 2025-08-16 16:42

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'Bunday username allaqachon mavjud.'}, max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9_]+$', "Username faqat harf, raqam va '_' bo‘lishi mumkin."), django.core.validators.MinLengthValidator(3, 'Username kamida 3 ta belgi bo‘lishi kerak.')])),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Bu email allaqachon ishlatilgan.'}, max_length=254, null=True, unique=True, validators=[django.core.validators.EmailValidator(message='Email formati noto‘g‘ri.')], verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator('^\\+998\\d{9}$', 'Telefon raqami: +998XXXXXXXXX')])),
                ('role', models.CharField(choices=[('guest', 'Guest'), ('user', 'User'), ('business', 'Business'), ('admin', 'Admin')], default='guest', max_length=20)),
                ('location_lat', models.FloatField(blank=True, null=True)),
                ('location_lng', models.FloatField(blank=True, null=True)),
                ('premium', models.BooleanField(default=False)),
                ('referral_code', models.CharField(blank=True, max_length=12, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.avatar_upload)),
                ('bio', models.CharField(blank=True, max_length=280)),
                ('push_notifications', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
